name: docker push

on:
  push:
    branches:
      - main

jobs:
  filter:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      docker: ${{ steps.changes.outputs.docker }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: check for file changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/filter.yml

  push:
    runs-on: ubuntu-latest
    needs: filter
    if: ${{ needs.filter.outputs.docker == 'true' }}
    env:
      REPOSITORY_OWNER: ${{ github.repository_owner }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: set up buildx
        uses: docker/setup-buildx-action@v2

      - name: set repository owner
        run: echo ${{ env.REPOSITORY_OWNER }} | tr '[:upper:]' '[:lower:]' > REPOSITORY_OWNER

      - name: login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: |
            ghcr.io/${{ env.REPOSITORY_OWNER }}/manaslu
          flavor: |
            latest=true
          tags: |
            type=sha,prefix=

      - name: build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile.development
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  docker-push-check:
    runs-on: ubuntu-latest
    needs: push
    if: ${{ ! failure() }}
    steps:
      - name: check
        run: echo "push is successfully executed."
