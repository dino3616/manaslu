name: api commit schema

on: push

env:
  node-version: 18
  mongodb-version: 6
  DATABASE_URL: mongodb://localhost:27017/test

jobs:
  filter:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      api: ${{ steps.changes.outputs.api }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: check for file changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/filter.yml

  commit:
    runs-on: ubuntu-latest
    env:
      APOLLO_KEY: ${{secrets.APOLLO_KEY}}
    needs: filter
    if: needs.filter.outputs.api == 'true'
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}

      - name: setup mongodb
        uses: supercharge/mongodb-github-action@v1.8.0
        with:
          mongodb-version: ${{ env.mongodb-version }}
          mongodb-port: 27017
          mongodb-db: test

      - name: install
        run: yarn install --immutable

      - name: setup prisma
        run: yarn api prisma:gen

      - name: generate graphql schema
        run: timeout 30 yarn api dev
        continue-on-error: true

      - name: move schema
        run: mv ./packages/api/schema.gql ./schema.gql

      - name: commit
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          if git diff --name-only | grep -q "./schema.gql"; then \
            git add ./schema.gql; \
            git commit -m "actions: ðŸ¤– (graphql) updated graphql schema"; \
            git push origin HEAD:${GITHUB_REF}; \
          fi

  api-commit-schema-check:
    runs-on: ubuntu-latest
    needs: commit
    if: ${{ ! failure() }}
    steps:
      - name: check
        run: echo "commit is successfully executed."
