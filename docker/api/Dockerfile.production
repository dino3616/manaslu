ARG PORT
ARG NODE_VERSION=18

FROM alpine:3 as alpine

#############
# Build Phase
#############
FROM node:${NODE_VERSION}-bullseye-slim AS builder

WORKDIR /manaslu

RUN yarn global add pnpm

COPY ./package.json ./pnpm-lock.yaml ./pnpm-workspace.yaml ./
COPY ./apps/api/package.json ./apps/api/package.json
COPY ./apps/client/package.json ./apps/client/package.json
COPY ./packages/eslint/package.json ./packages/eslint/package.json
COPY ./packages/jest/package.json ./packages/jest/package.json
COPY ./packages/prettier/package.json ./packages/prettier/package.json
COPY ./packages/stylelint/package.json ./packages/stylelint/package.json
COPY ./packages/tsconfig/package.json ./packages/tsconfig/package.json
RUN pnpm install --frozen-lockfile
COPY ./apps/api ./apps/api
COPY ./packages ./packages
RUN pnpm api build

###########
# Run Phase
###########
FROM gcr.io/distroless/nodejs:${NODE_VERSION}-debug AS runner
ENV NODE_ENV=production

WORKDIR /manaslu

COPY --from=alpine /lib/libz.so.1 /lib/libz.so.1
COPY --from=alpine /lib/libc.musl-x86_64.so.1 /lib/libc.musl-x86_64.so.1
COPY --from=builder /manaslu/node_modules ./node_modules
COPY --from=builder /manaslu/apps/api/node_modules ./apps/api/node_modules
COPY --from=builder /manaslu/packages/tsconfig/node_modules ./packages/tsconfig/node_modules
COPY --from=builder /manaslu/apps/api/dist ./apps/api/dist

WORKDIR /manaslu/apps/api

EXPOSE ${PORT}
CMD ["dist/src/main.js"]
